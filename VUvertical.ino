template<int tmpnote> void verticalVU() {
  int tmpval = map(audioval[0], 0, 255, 0, 59);
  int loopF = 0;
  if (tmpval > loopF) {
    ledsR[0].setHSV(gHue, 255, 255);
    ledsR[1].setHSV(gHue, 255, 255);
    ledsR[2].setHSV(gHue, 255, 255);
    ledsR[3].setHSV(gHue, 255, 255);
    ledsR[4].setHSV(gHue, 255, 255);
    ledsR[5].setHSV(gHue, 255, 255);
    ledsR[6].setHSV(gHue, 255, 255);
    ledsR[7].setHSV(gHue, 255, 255);
    ledsR[8].setHSV(gHue, 255, 255);
    ledsR[9].setHSV(gHue, 255, 255);
    ledsR[10].setHSV(gHue, 255, 255);
    ledsR[11].setHSV(gHue, 255, 255);
    ledsR[12].setHSV(gHue, 255, 255);
    ledsR[13].setHSV(gHue, 255, 255);
    ledsR[14].setHSV(gHue, 255, 255);
    ledsR[15].setHSV(gHue, 255, 255);
    ledsR[16].setHSV(gHue, 255, 255);
    ledsR[17].setHSV(gHue, 255, 255);
    ledsR[18].setHSV(gHue, 255, 255);
    ledsR[19].setHSV(gHue, 255, 255);
    ledsR[20].setHSV(gHue, 255, 255);
    ledsR[21].setHSV(gHue, 255, 255);
    ledsR[22].setHSV(gHue, 255, 255);
    ledsR[23].setHSV(gHue, 255, 255);
    ledsR[24].setHSV(gHue, 255, 255);
    ledsR[25].setHSV(gHue, 255, 255);
    ledsR[26].setHSV(gHue, 255, 255);
    ledsR[27].setHSV(gHue, 255, 255);
    ledsR[28].setHSV(gHue, 255, 255);
    ledsR[29].setHSV(gHue, 255, 255);
    ledsR[30].setHSV(gHue, 255, 255);
    ledsR[31].setHSV(gHue, 255, 255);
    ledsR[32].setHSV(gHue, 255, 255);
    ledsR[176].setHSV(gHue, 255, 255);
    ledsR[177].setHSV(gHue, 255, 255);
    ledsR[178].setHSV(gHue, 255, 255);
    ledsR[179].setHSV(gHue, 255, 255);
    ledsR[180].setHSV(gHue, 255, 255);
    ledsR[181].setHSV(gHue, 255, 255);
    ledsR[182].setHSV(gHue, 255, 255);
    ledsR[183].setHSV(gHue, 255, 255);
    ledsR[184].setHSV(gHue, 255, 255);
    ledsR[185].setHSV(gHue, 255, 255);
    ledsR[186].setHSV(gHue, 255, 255);
    ledsR[187].setHSV(gHue, 255, 255);
    ledsR[188].setHSV(gHue, 255, 255);
    ledsR[189].setHSV(gHue, 255, 255);
    ledsR[190].setHSV(gHue, 255, 255);
    ledsR[191].setHSV(gHue, 255, 255);
    ledsR[192].setHSV(gHue, 255, 255);
    ledsR[193].setHSV(gHue, 255, 255);
    ledsR[194].setHSV(gHue, 255, 255);
    ledsR[195].setHSV(gHue, 255, 255);
    ledsR[196].setHSV(gHue, 255, 255);
    ledsR[197].setHSV(gHue, 255, 255);
    ledsR[198].setHSV(gHue, 255, 255);
    ledsR[199].setHSV(gHue, 255, 255);
    ledsR[200].setHSV(gHue, 255, 255);
    ledsR[201].setHSV(gHue, 255, 255);
    ledsR[202].setHSV(gHue, 255, 255);
    ledsR[203].setHSV(gHue, 255, 255);
    ledsR[204].setHSV(gHue, 255, 255);
    ledsR[205].setHSV(gHue, 255, 255);
    ledsR[206].setHSV(gHue, 255, 255);
    ledsR[207].setHSV(gHue, 255, 255);
    ledsR[208].setHSV(gHue, 255, 255);
    ledsR[209].setHSV(gHue, 255, 255);
    ledsR[210].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    ledsR[0].setHSV(gHue, 255, 255);
    ledsR[1].setHSV(gHue, 255, 255);
    ledsR[2].setHSV(gHue, 255, 255);
    ledsR[3].setHSV(gHue, 255, 255);
    ledsR[4].setHSV(gHue, 255, 255);
    ledsR[5].setHSV(gHue, 255, 255);
    ledsR[6].setHSV(gHue, 255, 255);
    ledsR[7].setHSV(gHue, 255, 255);
    ledsR[8].setHSV(gHue, 255, 255);
    ledsR[9].setHSV(gHue, 255, 255);
    ledsR[10].setHSV(gHue, 255, 255);
    ledsR[11].setHSV(gHue, 255, 255);
    ledsR[12].setHSV(gHue, 255, 255);
    ledsR[13].setHSV(gHue, 255, 255);
    ledsR[14].setHSV(gHue, 255, 255);
    ledsR[15].setHSV(gHue, 255, 255);
    ledsR[16].setHSV(gHue, 255, 255);
    ledsR[17].setHSV(gHue, 255, 255);
    ledsR[18].setHSV(gHue, 255, 255);
    ledsR[19].setHSV(gHue, 255, 255);
    ledsR[20].setHSV(gHue, 255, 255);
    ledsR[21].setHSV(gHue, 255, 255);
    ledsR[22].setHSV(gHue, 255, 255);
    ledsR[23].setHSV(gHue, 255, 255);
    ledsR[24].setHSV(gHue, 255, 255);
    ledsR[25].setHSV(gHue, 255, 255);
    ledsR[26].setHSV(gHue, 255, 255);
    ledsR[27].setHSV(gHue, 255, 255);
    ledsR[28].setHSV(gHue, 255, 255);
    ledsR[29].setHSV(gHue, 255, 255);
    ledsR[30].setHSV(gHue, 255, 255);
    ledsR[31].setHSV(gHue, 255, 255);
    ledsR[32].setHSV(gHue, 255, 255);
    ledsR[33].setHSV(gHue, 255, 255);
    ledsR[175].setHSV(gHue, 255, 255);
    ledsR[176].setHSV(gHue, 255, 255);
    ledsR[177].setHSV(gHue, 255, 255);
    ledsR[178].setHSV(gHue, 255, 255);
    ledsR[179].setHSV(gHue, 255, 255);
    ledsR[180].setHSV(gHue, 255, 255);
    ledsR[181].setHSV(gHue, 255, 255);
    ledsR[182].setHSV(gHue, 255, 255);
    ledsR[183].setHSV(gHue, 255, 255);
    ledsR[184].setHSV(gHue, 255, 255);
    ledsR[185].setHSV(gHue, 255, 255);
    ledsR[186].setHSV(gHue, 255, 255);
    ledsR[187].setHSV(gHue, 255, 255);
    ledsR[188].setHSV(gHue, 255, 255);
    ledsR[189].setHSV(gHue, 255, 255);
    ledsR[190].setHSV(gHue, 255, 255);
    ledsR[191].setHSV(gHue, 255, 255);
    ledsR[192].setHSV(gHue, 255, 255);
    ledsR[193].setHSV(gHue, 255, 255);
    ledsR[194].setHSV(gHue, 255, 255);
    ledsR[195].setHSV(gHue, 255, 255);
    ledsR[196].setHSV(gHue, 255, 255);
    ledsR[197].setHSV(gHue, 255, 255);
    ledsR[198].setHSV(gHue, 255, 255);
    ledsR[199].setHSV(gHue, 255, 255);
    ledsR[200].setHSV(gHue, 255, 255);
    ledsR[201].setHSV(gHue, 255, 255);
    ledsR[202].setHSV(gHue, 255, 255);
    ledsR[203].setHSV(gHue, 255, 255);
    ledsR[204].setHSV(gHue, 255, 255);
    ledsR[205].setHSV(gHue, 255, 255);
    ledsR[206].setHSV(gHue, 255, 255);
    ledsR[207].setHSV(gHue, 255, 255);
    ledsR[208].setHSV(gHue, 255, 255);
    ledsR[209].setHSV(gHue, 255, 255);
    ledsR[210].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    ledsR[0].setHSV(gHue, 255, 255);
    ledsR[1].setHSV(gHue, 255, 255);
    ledsR[2].setHSV(gHue, 255, 255);
    ledsR[3].setHSV(gHue, 255, 255);
    ledsR[4].setHSV(gHue, 255, 255);
    ledsR[5].setHSV(gHue, 255, 255);
    ledsR[6].setHSV(gHue, 255, 255);
    ledsR[7].setHSV(gHue, 255, 255);
    ledsR[8].setHSV(gHue, 255, 255);
    ledsR[9].setHSV(gHue, 255, 255);
    ledsR[10].setHSV(gHue, 255, 255);
    ledsR[11].setHSV(gHue, 255, 255);
    ledsR[12].setHSV(gHue, 255, 255);
    ledsR[13].setHSV(gHue, 255, 255);
    ledsR[14].setHSV(gHue, 255, 255);
    ledsR[15].setHSV(gHue, 255, 255);
    ledsR[16].setHSV(gHue, 255, 255);
    ledsR[17].setHSV(gHue, 255, 255);
    ledsR[18].setHSV(gHue, 255, 255);
    ledsR[19].setHSV(gHue, 255, 255);
    ledsR[20].setHSV(gHue, 255, 255);
    ledsR[21].setHSV(gHue, 255, 255);
    ledsR[22].setHSV(gHue, 255, 255);
    ledsR[23].setHSV(gHue, 255, 255);
    ledsR[24].setHSV(gHue, 255, 255);
    ledsR[25].setHSV(gHue, 255, 255);
    ledsR[26].setHSV(gHue, 255, 255);
    ledsR[27].setHSV(gHue, 255, 255);
    ledsR[28].setHSV(gHue, 255, 255);
    ledsR[29].setHSV(gHue, 255, 255);
    ledsR[30].setHSV(gHue, 255, 255);
    ledsR[31].setHSV(gHue, 255, 255);
    ledsR[32].setHSV(gHue, 255, 255);
    ledsR[33].setHSV(gHue, 255, 255);
    ledsR[34].setHSV(gHue, 255, 255);
    ledsR[174].setHSV(gHue, 255, 255);
    ledsR[175].setHSV(gHue, 255, 255);
    ledsR[176].setHSV(gHue, 255, 255);
    ledsR[177].setHSV(gHue, 255, 255);
    ledsR[178].setHSV(gHue, 255, 255);
    ledsR[179].setHSV(gHue, 255, 255);
    ledsR[180].setHSV(gHue, 255, 255);
    ledsR[181].setHSV(gHue, 255, 255);
    ledsR[182].setHSV(gHue, 255, 255);
    ledsR[183].setHSV(gHue, 255, 255);
    ledsR[184].setHSV(gHue, 255, 255);
    ledsR[185].setHSV(gHue, 255, 255);
    ledsR[186].setHSV(gHue, 255, 255);
    ledsR[187].setHSV(gHue, 255, 255);
    ledsR[188].setHSV(gHue, 255, 255);
    ledsR[189].setHSV(gHue, 255, 255);
    ledsR[190].setHSV(gHue, 255, 255);
    ledsR[191].setHSV(gHue, 255, 255);
    ledsR[192].setHSV(gHue, 255, 255);
    ledsR[193].setHSV(gHue, 255, 255);
    ledsR[194].setHSV(gHue, 255, 255);
    ledsR[195].setHSV(gHue, 255, 255);
    ledsR[196].setHSV(gHue, 255, 255);
    ledsR[197].setHSV(gHue, 255, 255);
    ledsR[198].setHSV(gHue, 255, 255);
    ledsR[199].setHSV(gHue, 255, 255);
    ledsR[200].setHSV(gHue, 255, 255);
    ledsR[201].setHSV(gHue, 255, 255);
    ledsR[202].setHSV(gHue, 255, 255);
    ledsR[203].setHSV(gHue, 255, 255);
    ledsR[204].setHSV(gHue, 255, 255);
    ledsR[205].setHSV(gHue, 255, 255);
    ledsR[206].setHSV(gHue, 255, 255);
    ledsR[207].setHSV(gHue, 255, 255);
    ledsR[208].setHSV(gHue, 255, 255);
    ledsR[209].setHSV(gHue, 255, 255);
    ledsR[210].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][0].setHSV(gHue, 255, 255);
    leds[0][1].setHSV(gHue, 255, 255);
    leds[0][2].setHSV(gHue, 255, 255);
    leds[0][3].setHSV(gHue, 255, 255);
    leds[0][4].setHSV(gHue, 255, 255);
    leds[0][5].setHSV(gHue, 255, 255);
    leds[1][0].setHSV(gHue, 255, 255);
    leds[1][1].setHSV(gHue, 255, 255);
    leds[1][2].setHSV(gHue, 255, 255);
    leds[1][3].setHSV(gHue, 255, 255);
    leds[1][4].setHSV(gHue, 255, 255);
    leds[1][5].setHSV(gHue, 255, 255);
    leds[2][0].setHSV(gHue, 255, 255);
    leds[2][1].setHSV(gHue, 255, 255);
    leds[2][2].setHSV(gHue, 255, 255);
    leds[2][3].setHSV(gHue, 255, 255);
    leds[2][4].setHSV(gHue, 255, 255);
    leds[2][5].setHSV(gHue, 255, 255);
    leds[3][0].setHSV(gHue, 255, 255);
    leds[3][1].setHSV(gHue, 255, 255);
    leds[3][2].setHSV(gHue, 255, 255);
    leds[3][3].setHSV(gHue, 255, 255);
    leds[3][4].setHSV(gHue, 255, 255);
    leds[3][5].setHSV(gHue, 255, 255);
    leds[4][0].setHSV(gHue, 255, 255);
    leds[4][1].setHSV(gHue, 255, 255);
    leds[4][2].setHSV(gHue, 255, 255);
    leds[4][3].setHSV(gHue, 255, 255);
    leds[4][4].setHSV(gHue, 255, 255);
    leds[4][5].setHSV(gHue, 255, 255);
    leds[5][0].setHSV(gHue, 255, 255);
    leds[5][1].setHSV(gHue, 255, 255);
    leds[5][2].setHSV(gHue, 255, 255);
    leds[5][3].setHSV(gHue, 255, 255);
    leds[5][4].setHSV(gHue, 255, 255);
    leds[5][5].setHSV(gHue, 255, 255);
    ledsR[33].setHSV(gHue, 255, 255);
    ledsR[34].setHSV(gHue, 255, 255);
    ledsR[174].setHSV(gHue, 255, 255);
    ledsR[175].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][0].setHSV(gHue, 255, 255);
    leds[0][1].setHSV(gHue, 255, 255);
    leds[0][2].setHSV(gHue, 255, 255);
    leds[0][3].setHSV(gHue, 255, 255);
    leds[0][4].setHSV(gHue, 255, 255);
    leds[0][5].setHSV(gHue, 255, 255);
    leds[1][0].setHSV(gHue, 255, 255);
    leds[1][1].setHSV(gHue, 255, 255);
    leds[1][2].setHSV(gHue, 255, 255);
    leds[1][3].setHSV(gHue, 255, 255);
    leds[1][4].setHSV(gHue, 255, 255);
    leds[1][5].setHSV(gHue, 255, 255);
    leds[2][0].setHSV(gHue, 255, 255);
    leds[2][1].setHSV(gHue, 255, 255);
    leds[2][2].setHSV(gHue, 255, 255);
    leds[2][3].setHSV(gHue, 255, 255);
    leds[2][4].setHSV(gHue, 255, 255);
    leds[2][5].setHSV(gHue, 255, 255);
    leds[3][0].setHSV(gHue, 255, 255);
    leds[3][1].setHSV(gHue, 255, 255);
    leds[3][2].setHSV(gHue, 255, 255);
    leds[3][3].setHSV(gHue, 255, 255);
    leds[3][4].setHSV(gHue, 255, 255);
    leds[3][5].setHSV(gHue, 255, 255);
    leds[4][0].setHSV(gHue, 255, 255);
    leds[4][1].setHSV(gHue, 255, 255);
    leds[4][2].setHSV(gHue, 255, 255);
    leds[4][3].setHSV(gHue, 255, 255);
    leds[4][4].setHSV(gHue, 255, 255);
    leds[4][5].setHSV(gHue, 255, 255);
    leds[5][0].setHSV(gHue, 255, 255);
    leds[5][1].setHSV(gHue, 255, 255);
    leds[5][2].setHSV(gHue, 255, 255);
    leds[5][3].setHSV(gHue, 255, 255);
    leds[5][4].setHSV(gHue, 255, 255);
    leds[5][5].setHSV(gHue, 255, 255);
    ledsR[34].setHSV(gHue, 255, 255);
    ledsR[35].setHSV(gHue, 255, 255);
    ledsR[173].setHSV(gHue, 255, 255);
    ledsR[174].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][0].setHSV(gHue, 255, 255);
    leds[0][1].setHSV(gHue, 255, 255);
    leds[0][2].setHSV(gHue, 255, 255);
    leds[0][3].setHSV(gHue, 255, 255);
    leds[0][4].setHSV(gHue, 255, 255);
    leds[0][5].setHSV(gHue, 255, 255);
    leds[0][6].setHSV(gHue, 255, 255);
    leds[1][0].setHSV(gHue, 255, 255);
    leds[1][1].setHSV(gHue, 255, 255);
    leds[1][2].setHSV(gHue, 255, 255);
    leds[1][3].setHSV(gHue, 255, 255);
    leds[1][4].setHSV(gHue, 255, 255);
    leds[1][5].setHSV(gHue, 255, 255);
    leds[1][6].setHSV(gHue, 255, 255);
    leds[2][0].setHSV(gHue, 255, 255);
    leds[2][1].setHSV(gHue, 255, 255);
    leds[2][2].setHSV(gHue, 255, 255);
    leds[2][3].setHSV(gHue, 255, 255);
    leds[2][4].setHSV(gHue, 255, 255);
    leds[2][5].setHSV(gHue, 255, 255);
    leds[2][6].setHSV(gHue, 255, 255);
    leds[3][0].setHSV(gHue, 255, 255);
    leds[3][1].setHSV(gHue, 255, 255);
    leds[3][2].setHSV(gHue, 255, 255);
    leds[3][3].setHSV(gHue, 255, 255);
    leds[3][4].setHSV(gHue, 255, 255);
    leds[3][5].setHSV(gHue, 255, 255);
    leds[3][6].setHSV(gHue, 255, 255);
    leds[4][0].setHSV(gHue, 255, 255);
    leds[4][1].setHSV(gHue, 255, 255);
    leds[4][2].setHSV(gHue, 255, 255);
    leds[4][3].setHSV(gHue, 255, 255);
    leds[4][4].setHSV(gHue, 255, 255);
    leds[4][5].setHSV(gHue, 255, 255);
    leds[4][6].setHSV(gHue, 255, 255);
    leds[5][0].setHSV(gHue, 255, 255);
    leds[5][1].setHSV(gHue, 255, 255);
    leds[5][2].setHSV(gHue, 255, 255);
    leds[5][3].setHSV(gHue, 255, 255);
    leds[5][4].setHSV(gHue, 255, 255);
    leds[5][5].setHSV(gHue, 255, 255);
    leds[5][6].setHSV(gHue, 255, 255);
    ledsR[35].setHSV(gHue, 255, 255);
    ledsR[36].setHSV(gHue, 255, 255);
    ledsR[172].setHSV(gHue, 255, 255);
    ledsR[173].setHSV(gHue, 255, 255);
    ledsR[174].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][6].setHSV(gHue, 255, 255);
    leds[0][7].setHSV(gHue, 255, 255);
    leds[1][6].setHSV(gHue, 255, 255);
    leds[1][7].setHSV(gHue, 255, 255);
    leds[2][6].setHSV(gHue, 255, 255);
    leds[2][7].setHSV(gHue, 255, 255);
    leds[3][6].setHSV(gHue, 255, 255);
    leds[3][7].setHSV(gHue, 255, 255);
    leds[4][6].setHSV(gHue, 255, 255);
    leds[4][7].setHSV(gHue, 255, 255);
    leds[5][6].setHSV(gHue, 255, 255);
    leds[5][7].setHSV(gHue, 255, 255);
    ledsR[35].setHSV(gHue, 255, 255);
    ledsR[36].setHSV(gHue, 255, 255);
    ledsR[37].setHSV(gHue, 255, 255);
    ledsR[171].setHSV(gHue, 255, 255);
    ledsR[172].setHSV(gHue, 255, 255);
    ledsR[173].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][6].setHSV(gHue, 255, 255);
    leds[0][7].setHSV(gHue, 255, 255);
    leds[1][6].setHSV(gHue, 255, 255);
    leds[1][7].setHSV(gHue, 255, 255);
    leds[2][6].setHSV(gHue, 255, 255);
    leds[2][7].setHSV(gHue, 255, 255);
    leds[3][6].setHSV(gHue, 255, 255);
    leds[3][7].setHSV(gHue, 255, 255);
    leds[4][6].setHSV(gHue, 255, 255);
    leds[4][7].setHSV(gHue, 255, 255);
    leds[5][6].setHSV(gHue, 255, 255);
    leds[5][7].setHSV(gHue, 255, 255);
    ledsR[36].setHSV(gHue, 255, 255);
    ledsR[37].setHSV(gHue, 255, 255);
    ledsR[38].setHSV(gHue, 255, 255);
    ledsR[170].setHSV(gHue, 255, 255);
    ledsR[171].setHSV(gHue, 255, 255);
    ledsR[172].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][7].setHSV(gHue, 255, 255);
    leds[0][8].setHSV(gHue, 255, 255);
    leds[1][7].setHSV(gHue, 255, 255);
    leds[1][8].setHSV(gHue, 255, 255);
    leds[2][7].setHSV(gHue, 255, 255);
    leds[2][8].setHSV(gHue, 255, 255);
    leds[3][7].setHSV(gHue, 255, 255);
    leds[3][8].setHSV(gHue, 255, 255);
    leds[4][7].setHSV(gHue, 255, 255);
    leds[4][8].setHSV(gHue, 255, 255);
    leds[5][7].setHSV(gHue, 255, 255);
    leds[5][8].setHSV(gHue, 255, 255);
    ledsR[37].setHSV(gHue, 255, 255);
    ledsR[38].setHSV(gHue, 255, 255);
    ledsR[39].setHSV(gHue, 255, 255);
    ledsR[170].setHSV(gHue, 255, 255);
    ledsR[171].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][8].setHSV(gHue, 255, 255);
    leds[0][9].setHSV(gHue, 255, 255);
    leds[1][8].setHSV(gHue, 255, 255);
    leds[1][9].setHSV(gHue, 255, 255);
    leds[2][8].setHSV(gHue, 255, 255);
    leds[2][9].setHSV(gHue, 255, 255);
    leds[3][8].setHSV(gHue, 255, 255);
    leds[3][9].setHSV(gHue, 255, 255);
    leds[4][8].setHSV(gHue, 255, 255);
    leds[4][9].setHSV(gHue, 255, 255);
    leds[5][8].setHSV(gHue, 255, 255);
    leds[5][9].setHSV(gHue, 255, 255);
    ledsR[38].setHSV(gHue, 255, 255);
    ledsR[39].setHSV(gHue, 255, 255);
    ledsR[169].setHSV(gHue, 255, 255);
    ledsR[170].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][8].setHSV(gHue, 255, 255);
    leds[0][9].setHSV(gHue, 255, 255);
    leds[1][8].setHSV(gHue, 255, 255);
    leds[1][9].setHSV(gHue, 255, 255);
    leds[2][8].setHSV(gHue, 255, 255);
    leds[2][9].setHSV(gHue, 255, 255);
    leds[3][8].setHSV(gHue, 255, 255);
    leds[3][9].setHSV(gHue, 255, 255);
    leds[4][8].setHSV(gHue, 255, 255);
    leds[4][9].setHSV(gHue, 255, 255);
    leds[5][8].setHSV(gHue, 255, 255);
    leds[5][9].setHSV(gHue, 255, 255);
    ledsR[39].setHSV(gHue, 255, 255);
    ledsR[40].setHSV(gHue, 255, 255);
    ledsR[168].setHSV(gHue, 255, 255);
    ledsR[169].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][9].setHSV(gHue, 255, 255);
    leds[0][10].setHSV(gHue, 255, 255);
    leds[1][9].setHSV(gHue, 255, 255);
    leds[1][10].setHSV(gHue, 255, 255);
    leds[2][9].setHSV(gHue, 255, 255);
    leds[2][10].setHSV(gHue, 255, 255);
    leds[3][9].setHSV(gHue, 255, 255);
    leds[3][10].setHSV(gHue, 255, 255);
    leds[4][9].setHSV(gHue, 255, 255);
    leds[4][10].setHSV(gHue, 255, 255);
    leds[5][9].setHSV(gHue, 255, 255);
    leds[5][10].setHSV(gHue, 255, 255);
    ledsR[40].setHSV(gHue, 255, 255);
    ledsR[41].setHSV(gHue, 255, 255);
    ledsR[167].setHSV(gHue, 255, 255);
    ledsR[168].setHSV(gHue, 255, 255);
    ledsR[169].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][9].setHSV(gHue, 255, 255);
    leds[0][10].setHSV(gHue, 255, 255);
    leds[1][9].setHSV(gHue, 255, 255);
    leds[1][10].setHSV(gHue, 255, 255);
    leds[2][9].setHSV(gHue, 255, 255);
    leds[2][10].setHSV(gHue, 255, 255);
    leds[3][9].setHSV(gHue, 255, 255);
    leds[3][10].setHSV(gHue, 255, 255);
    leds[4][9].setHSV(gHue, 255, 255);
    leds[4][10].setHSV(gHue, 255, 255);
    leds[5][9].setHSV(gHue, 255, 255);
    leds[5][10].setHSV(gHue, 255, 255);
    ledsR[40].setHSV(gHue, 255, 255);
    ledsR[41].setHSV(gHue, 255, 255);
    ledsR[42].setHSV(gHue, 255, 255);
    ledsR[166].setHSV(gHue, 255, 255);
    ledsR[167].setHSV(gHue, 255, 255);
    ledsR[168].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][10].setHSV(gHue, 255, 255);
    leds[0][11].setHSV(gHue, 255, 255);
    leds[1][10].setHSV(gHue, 255, 255);
    leds[1][11].setHSV(gHue, 255, 255);
    leds[2][10].setHSV(gHue, 255, 255);
    leds[2][11].setHSV(gHue, 255, 255);
    leds[3][10].setHSV(gHue, 255, 255);
    leds[3][11].setHSV(gHue, 255, 255);
    leds[4][10].setHSV(gHue, 255, 255);
    leds[4][11].setHSV(gHue, 255, 255);
    leds[5][10].setHSV(gHue, 255, 255);
    leds[5][11].setHSV(gHue, 255, 255);
    ledsR[41].setHSV(gHue, 255, 255);
    ledsR[42].setHSV(gHue, 255, 255);
    ledsR[43].setHSV(gHue, 255, 255);
    ledsR[165].setHSV(gHue, 255, 255);
    ledsR[166].setHSV(gHue, 255, 255);
    ledsR[167].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][11].setHSV(gHue, 255, 255);
    leds[0][12].setHSV(gHue, 255, 255);
    leds[1][11].setHSV(gHue, 255, 255);
    leds[1][12].setHSV(gHue, 255, 255);
    leds[2][11].setHSV(gHue, 255, 255);
    leds[2][12].setHSV(gHue, 255, 255);
    leds[3][11].setHSV(gHue, 255, 255);
    leds[3][12].setHSV(gHue, 255, 255);
    leds[4][11].setHSV(gHue, 255, 255);
    leds[4][12].setHSV(gHue, 255, 255);
    leds[5][11].setHSV(gHue, 255, 255);
    leds[5][12].setHSV(gHue, 255, 255);
    ledsR[42].setHSV(gHue, 255, 255);
    ledsR[43].setHSV(gHue, 255, 255);
    ledsR[44].setHSV(gHue, 255, 255);
    ledsR[165].setHSV(gHue, 255, 255);
    ledsR[166].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][11].setHSV(gHue, 255, 255);
    leds[0][12].setHSV(gHue, 255, 255);
    leds[1][11].setHSV(gHue, 255, 255);
    leds[1][12].setHSV(gHue, 255, 255);
    leds[2][11].setHSV(gHue, 255, 255);
    leds[2][12].setHSV(gHue, 255, 255);
    leds[3][11].setHSV(gHue, 255, 255);
    leds[3][12].setHSV(gHue, 255, 255);
    leds[4][11].setHSV(gHue, 255, 255);
    leds[4][12].setHSV(gHue, 255, 255);
    leds[5][11].setHSV(gHue, 255, 255);
    leds[5][12].setHSV(gHue, 255, 255);
    ledsR[43].setHSV(gHue, 255, 255);
    ledsR[44].setHSV(gHue, 255, 255);
    ledsR[164].setHSV(gHue, 255, 255);
    ledsR[165].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][12].setHSV(gHue, 255, 255);
    leds[0][13].setHSV(gHue, 255, 255);
    leds[1][12].setHSV(gHue, 255, 255);
    leds[1][13].setHSV(gHue, 255, 255);
    leds[2][12].setHSV(gHue, 255, 255);
    leds[2][13].setHSV(gHue, 255, 255);
    leds[3][12].setHSV(gHue, 255, 255);
    leds[3][13].setHSV(gHue, 255, 255);
    leds[4][12].setHSV(gHue, 255, 255);
    leds[4][13].setHSV(gHue, 255, 255);
    leds[5][12].setHSV(gHue, 255, 255);
    leds[5][13].setHSV(gHue, 255, 255);
    ledsR[44].setHSV(gHue, 255, 255);
    ledsR[45].setHSV(gHue, 255, 255);
    ledsR[163].setHSV(gHue, 255, 255);
    ledsR[164].setHSV(gHue, 255, 255);
    ledsR[165].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][13].setHSV(gHue, 255, 255);
    leds[0][14].setHSV(gHue, 255, 255);
    leds[1][13].setHSV(gHue, 255, 255);
    leds[1][14].setHSV(gHue, 255, 255);
    leds[2][13].setHSV(gHue, 255, 255);
    leds[2][14].setHSV(gHue, 255, 255);
    leds[3][13].setHSV(gHue, 255, 255);
    leds[3][14].setHSV(gHue, 255, 255);
    leds[4][13].setHSV(gHue, 255, 255);
    leds[4][14].setHSV(gHue, 255, 255);
    leds[5][13].setHSV(gHue, 255, 255);
    leds[5][14].setHSV(gHue, 255, 255);
    ledsR[44].setHSV(gHue, 255, 255);
    ledsR[45].setHSV(gHue, 255, 255);
    ledsR[46].setHSV(gHue, 255, 255);
    ledsR[162].setHSV(gHue, 255, 255);
    ledsR[163].setHSV(gHue, 255, 255);
    ledsR[164].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][13].setHSV(gHue, 255, 255);
    leds[0][14].setHSV(gHue, 255, 255);
    leds[1][13].setHSV(gHue, 255, 255);
    leds[1][14].setHSV(gHue, 255, 255);
    leds[2][13].setHSV(gHue, 255, 255);
    leds[2][14].setHSV(gHue, 255, 255);
    leds[3][13].setHSV(gHue, 255, 255);
    leds[3][14].setHSV(gHue, 255, 255);
    leds[4][13].setHSV(gHue, 255, 255);
    leds[4][14].setHSV(gHue, 255, 255);
    leds[5][13].setHSV(gHue, 255, 255);
    leds[5][14].setHSV(gHue, 255, 255);
    ledsR[45].setHSV(gHue, 255, 255);
    ledsR[46].setHSV(gHue, 255, 255);
    ledsR[162].setHSV(gHue, 255, 255);
    ledsR[163].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][14].setHSV(gHue, 255, 255);
    leds[0][15].setHSV(gHue, 255, 255);
    leds[1][14].setHSV(gHue, 255, 255);
    leds[1][15].setHSV(gHue, 255, 255);
    leds[2][14].setHSV(gHue, 255, 255);
    leds[2][15].setHSV(gHue, 255, 255);
    leds[3][14].setHSV(gHue, 255, 255);
    leds[3][15].setHSV(gHue, 255, 255);
    leds[4][14].setHSV(gHue, 255, 255);
    leds[4][15].setHSV(gHue, 255, 255);
    leds[5][14].setHSV(gHue, 255, 255);
    leds[5][15].setHSV(gHue, 255, 255);
    ledsR[46].setHSV(gHue, 255, 255);
    ledsR[162].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][15].setHSV(gHue, 255, 255);
    leds[1][15].setHSV(gHue, 255, 255);
    leds[2][15].setHSV(gHue, 255, 255);
    leds[3][15].setHSV(gHue, 255, 255);
    leds[4][15].setHSV(gHue, 255, 255);
    leds[5][15].setHSV(gHue, 255, 255);
    ledsR[47].setHSV(gHue, 255, 255);
    ledsR[161].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][15].setHSV(gHue, 255, 255);
    leds[0][16].setHSV(gHue, 255, 255);
    leds[1][15].setHSV(gHue, 255, 255);
    leds[1][16].setHSV(gHue, 255, 255);
    leds[2][15].setHSV(gHue, 255, 255);
    leds[2][16].setHSV(gHue, 255, 255);
    leds[3][15].setHSV(gHue, 255, 255);
    leds[3][16].setHSV(gHue, 255, 255);
    leds[4][15].setHSV(gHue, 255, 255);
    leds[4][16].setHSV(gHue, 255, 255);
    leds[5][15].setHSV(gHue, 255, 255);
    leds[5][16].setHSV(gHue, 255, 255);
    ledsR[47].setHSV(gHue, 255, 255);
    ledsR[161].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][16].setHSV(gHue, 255, 255);
    leds[1][16].setHSV(gHue, 255, 255);
    leds[2][16].setHSV(gHue, 255, 255);
    leds[3][16].setHSV(gHue, 255, 255);
    leds[4][16].setHSV(gHue, 255, 255);
    leds[5][16].setHSV(gHue, 255, 255);
    ledsR[47].setHSV(gHue, 255, 255);
    ledsR[48].setHSV(gHue, 255, 255);
    ledsR[160].setHSV(gHue, 255, 255);
    ledsR[161].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][16].setHSV(gHue, 255, 255);
    leds[0][17].setHSV(gHue, 255, 255);
    leds[1][16].setHSV(gHue, 255, 255);
    leds[1][17].setHSV(gHue, 255, 255);
    leds[2][16].setHSV(gHue, 255, 255);
    leds[2][17].setHSV(gHue, 255, 255);
    leds[3][16].setHSV(gHue, 255, 255);
    leds[3][17].setHSV(gHue, 255, 255);
    leds[4][16].setHSV(gHue, 255, 255);
    leds[4][17].setHSV(gHue, 255, 255);
    leds[5][16].setHSV(gHue, 255, 255);
    leds[5][17].setHSV(gHue, 255, 255);
    ledsR[48].setHSV(gHue, 255, 255);
    ledsR[160].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][17].setHSV(gHue, 255, 255);
    leds[1][17].setHSV(gHue, 255, 255);
    leds[2][17].setHSV(gHue, 255, 255);
    leds[3][17].setHSV(gHue, 255, 255);
    leds[4][17].setHSV(gHue, 255, 255);
    leds[5][17].setHSV(gHue, 255, 255);
    ledsR[48].setHSV(gHue, 255, 255);
    ledsR[49].setHSV(gHue, 255, 255);
    ledsR[159].setHSV(gHue, 255, 255);
    ledsR[160].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][17].setHSV(gHue, 255, 255);
    leds[0][18].setHSV(gHue, 255, 255);
    leds[1][17].setHSV(gHue, 255, 255);
    leds[1][18].setHSV(gHue, 255, 255);
    leds[2][17].setHSV(gHue, 255, 255);
    leds[2][18].setHSV(gHue, 255, 255);
    leds[3][17].setHSV(gHue, 255, 255);
    leds[3][18].setHSV(gHue, 255, 255);
    leds[4][17].setHSV(gHue, 255, 255);
    leds[4][18].setHSV(gHue, 255, 255);
    leds[5][17].setHSV(gHue, 255, 255);
    leds[5][18].setHSV(gHue, 255, 255);
    ledsR[49].setHSV(gHue, 255, 255);
    ledsR[159].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][18].setHSV(gHue, 255, 255);
    leds[1][18].setHSV(gHue, 255, 255);
    leds[2][18].setHSV(gHue, 255, 255);
    leds[3][18].setHSV(gHue, 255, 255);
    leds[4][18].setHSV(gHue, 255, 255);
    leds[5][18].setHSV(gHue, 255, 255);
    ledsR[49].setHSV(gHue, 255, 255);
    ledsR[50].setHSV(gHue, 255, 255);
    ledsR[158].setHSV(gHue, 255, 255);
    ledsR[159].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][18].setHSV(gHue, 255, 255);
    leds[1][18].setHSV(gHue, 255, 255);
    leds[2][18].setHSV(gHue, 255, 255);
    leds[3][18].setHSV(gHue, 255, 255);
    leds[4][18].setHSV(gHue, 255, 255);
    leds[5][18].setHSV(gHue, 255, 255);
    ledsR[50].setHSV(gHue, 255, 255);
    ledsR[158].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][19].setHSV(gHue, 255, 255);
    leds[1][19].setHSV(gHue, 255, 255);
    leds[2][19].setHSV(gHue, 255, 255);
    leds[3][19].setHSV(gHue, 255, 255);
    leds[4][19].setHSV(gHue, 255, 255);
    leds[5][19].setHSV(gHue, 255, 255);
    ledsR[50].setHSV(gHue, 255, 255);
    ledsR[158].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][19].setHSV(gHue, 255, 255);
    leds[1][19].setHSV(gHue, 255, 255);
    leds[2][19].setHSV(gHue, 255, 255);
    leds[3][19].setHSV(gHue, 255, 255);
    leds[4][19].setHSV(gHue, 255, 255);
    leds[5][19].setHSV(gHue, 255, 255);
    ledsR[50].setHSV(gHue, 255, 255);
    ledsR[51].setHSV(gHue, 255, 255);
    ledsR[157].setHSV(gHue, 255, 255);
    ledsR[158].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][19].setHSV(gHue, 255, 255);
    leds[0][20].setHSV(gHue, 255, 255);
    leds[1][19].setHSV(gHue, 255, 255);
    leds[1][20].setHSV(gHue, 255, 255);
    leds[2][19].setHSV(gHue, 255, 255);
    leds[2][20].setHSV(gHue, 255, 255);
    leds[3][19].setHSV(gHue, 255, 255);
    leds[3][20].setHSV(gHue, 255, 255);
    leds[4][19].setHSV(gHue, 255, 255);
    leds[4][20].setHSV(gHue, 255, 255);
    leds[5][19].setHSV(gHue, 255, 255);
    leds[5][20].setHSV(gHue, 255, 255);
    ledsR[51].setHSV(gHue, 255, 255);
    ledsR[157].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][20].setHSV(gHue, 255, 255);
    leds[1][20].setHSV(gHue, 255, 255);
    leds[2][20].setHSV(gHue, 255, 255);
    leds[3][20].setHSV(gHue, 255, 255);
    leds[4][20].setHSV(gHue, 255, 255);
    leds[5][20].setHSV(gHue, 255, 255);
    ledsR[51].setHSV(gHue, 255, 255);
    ledsR[52].setHSV(gHue, 255, 255);
    ledsR[156].setHSV(gHue, 255, 255);
    ledsR[157].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][20].setHSV(gHue, 255, 255);
    leds[0][21].setHSV(gHue, 255, 255);
    leds[1][20].setHSV(gHue, 255, 255);
    leds[1][21].setHSV(gHue, 255, 255);
    leds[2][20].setHSV(gHue, 255, 255);
    leds[2][21].setHSV(gHue, 255, 255);
    leds[3][20].setHSV(gHue, 255, 255);
    leds[3][21].setHSV(gHue, 255, 255);
    leds[4][20].setHSV(gHue, 255, 255);
    leds[4][21].setHSV(gHue, 255, 255);
    leds[5][20].setHSV(gHue, 255, 255);
    leds[5][21].setHSV(gHue, 255, 255);
    ledsR[52].setHSV(gHue, 255, 255);
    ledsR[156].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][21].setHSV(gHue, 255, 255);
    leds[1][21].setHSV(gHue, 255, 255);
    leds[2][21].setHSV(gHue, 255, 255);
    leds[3][21].setHSV(gHue, 255, 255);
    leds[4][21].setHSV(gHue, 255, 255);
    leds[5][21].setHSV(gHue, 255, 255);
    ledsR[52].setHSV(gHue, 255, 255);
    ledsR[53].setHSV(gHue, 255, 255);
    ledsR[155].setHSV(gHue, 255, 255);
    ledsR[156].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][21].setHSV(gHue, 255, 255);
    leds[0][22].setHSV(gHue, 255, 255);
    leds[1][21].setHSV(gHue, 255, 255);
    leds[1][22].setHSV(gHue, 255, 255);
    leds[2][21].setHSV(gHue, 255, 255);
    leds[2][22].setHSV(gHue, 255, 255);
    leds[3][21].setHSV(gHue, 255, 255);
    leds[3][22].setHSV(gHue, 255, 255);
    leds[4][21].setHSV(gHue, 255, 255);
    leds[4][22].setHSV(gHue, 255, 255);
    leds[5][21].setHSV(gHue, 255, 255);
    leds[5][22].setHSV(gHue, 255, 255);
    ledsR[53].setHSV(gHue, 255, 255);
    ledsR[155].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][22].setHSV(gHue, 255, 255);
    leds[1][22].setHSV(gHue, 255, 255);
    leds[2][22].setHSV(gHue, 255, 255);
    leds[3][22].setHSV(gHue, 255, 255);
    leds[4][22].setHSV(gHue, 255, 255);
    leds[5][22].setHSV(gHue, 255, 255);
    ledsR[53].setHSV(gHue, 255, 255);
    ledsR[54].setHSV(gHue, 255, 255);
    ledsR[154].setHSV(gHue, 255, 255);
    ledsR[155].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][22].setHSV(gHue, 255, 255);
    leds[0][23].setHSV(gHue, 255, 255);
    leds[1][22].setHSV(gHue, 255, 255);
    leds[1][23].setHSV(gHue, 255, 255);
    leds[2][22].setHSV(gHue, 255, 255);
    leds[2][23].setHSV(gHue, 255, 255);
    leds[3][22].setHSV(gHue, 255, 255);
    leds[3][23].setHSV(gHue, 255, 255);
    leds[4][22].setHSV(gHue, 255, 255);
    leds[4][23].setHSV(gHue, 255, 255);
    leds[5][22].setHSV(gHue, 255, 255);
    leds[5][23].setHSV(gHue, 255, 255);
    ledsR[54].setHSV(gHue, 255, 255);
    ledsR[154].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][23].setHSV(gHue, 255, 255);
    leds[1][23].setHSV(gHue, 255, 255);
    leds[2][23].setHSV(gHue, 255, 255);
    leds[3][23].setHSV(gHue, 255, 255);
    leds[4][23].setHSV(gHue, 255, 255);
    leds[5][23].setHSV(gHue, 255, 255);
    ledsR[54].setHSV(gHue, 255, 255);
    ledsR[154].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][23].setHSV(gHue, 255, 255);
    leds[1][23].setHSV(gHue, 255, 255);
    leds[2][23].setHSV(gHue, 255, 255);
    leds[3][23].setHSV(gHue, 255, 255);
    leds[4][23].setHSV(gHue, 255, 255);
    leds[5][23].setHSV(gHue, 255, 255);
    ledsR[54].setHSV(gHue, 255, 255);
    ledsR[55].setHSV(gHue, 255, 255);
    ledsR[153].setHSV(gHue, 255, 255);
    ledsR[154].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][23].setHSV(gHue, 255, 255);
    leds[0][24].setHSV(gHue, 255, 255);
    leds[1][23].setHSV(gHue, 255, 255);
    leds[1][24].setHSV(gHue, 255, 255);
    leds[2][23].setHSV(gHue, 255, 255);
    leds[2][24].setHSV(gHue, 255, 255);
    leds[3][23].setHSV(gHue, 255, 255);
    leds[3][24].setHSV(gHue, 255, 255);
    leds[4][23].setHSV(gHue, 255, 255);
    leds[4][24].setHSV(gHue, 255, 255);
    leds[5][23].setHSV(gHue, 255, 255);
    leds[5][24].setHSV(gHue, 255, 255);
    ledsR[55].setHSV(gHue, 255, 255);
    ledsR[153].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][24].setHSV(gHue, 255, 255);
    leds[0][25].setHSV(gHue, 255, 255);
    leds[1][24].setHSV(gHue, 255, 255);
    leds[1][25].setHSV(gHue, 255, 255);
    leds[2][24].setHSV(gHue, 255, 255);
    leds[2][25].setHSV(gHue, 255, 255);
    leds[3][24].setHSV(gHue, 255, 255);
    leds[3][25].setHSV(gHue, 255, 255);
    leds[4][24].setHSV(gHue, 255, 255);
    leds[4][25].setHSV(gHue, 255, 255);
    leds[5][24].setHSV(gHue, 255, 255);
    leds[5][25].setHSV(gHue, 255, 255);
    ledsR[55].setHSV(gHue, 255, 255);
    ledsR[56].setHSV(gHue, 255, 255);
    ledsR[152].setHSV(gHue, 255, 255);
    ledsR[153].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][24].setHSV(gHue, 255, 255);
    leds[0][25].setHSV(gHue, 255, 255);
    leds[0][26].setHSV(gHue, 255, 255);
    leds[1][24].setHSV(gHue, 255, 255);
    leds[1][25].setHSV(gHue, 255, 255);
    leds[1][26].setHSV(gHue, 255, 255);
    leds[2][24].setHSV(gHue, 255, 255);
    leds[2][25].setHSV(gHue, 255, 255);
    leds[2][26].setHSV(gHue, 255, 255);
    leds[3][24].setHSV(gHue, 255, 255);
    leds[3][25].setHSV(gHue, 255, 255);
    leds[3][26].setHSV(gHue, 255, 255);
    leds[4][24].setHSV(gHue, 255, 255);
    leds[4][25].setHSV(gHue, 255, 255);
    leds[4][26].setHSV(gHue, 255, 255);
    leds[5][24].setHSV(gHue, 255, 255);
    leds[5][25].setHSV(gHue, 255, 255);
    leds[5][26].setHSV(gHue, 255, 255);
    ledsR[56].setHSV(gHue, 255, 255);
    ledsR[152].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][25].setHSV(gHue, 255, 255);
    leds[0][26].setHSV(gHue, 255, 255);
    leds[1][25].setHSV(gHue, 255, 255);
    leds[1][26].setHSV(gHue, 255, 255);
    leds[2][25].setHSV(gHue, 255, 255);
    leds[2][26].setHSV(gHue, 255, 255);
    leds[3][25].setHSV(gHue, 255, 255);
    leds[3][26].setHSV(gHue, 255, 255);
    leds[4][25].setHSV(gHue, 255, 255);
    leds[4][26].setHSV(gHue, 255, 255);
    leds[5][25].setHSV(gHue, 255, 255);
    leds[5][26].setHSV(gHue, 255, 255);
    ledsR[56].setHSV(gHue, 255, 255);
    ledsR[57].setHSV(gHue, 255, 255);
    ledsR[151].setHSV(gHue, 255, 255);
    ledsR[152].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][26].setHSV(gHue, 255, 255);
    leds[0][27].setHSV(gHue, 255, 255);
    leds[1][26].setHSV(gHue, 255, 255);
    leds[1][27].setHSV(gHue, 255, 255);
    leds[2][26].setHSV(gHue, 255, 255);
    leds[2][27].setHSV(gHue, 255, 255);
    leds[3][26].setHSV(gHue, 255, 255);
    leds[3][27].setHSV(gHue, 255, 255);
    leds[4][26].setHSV(gHue, 255, 255);
    leds[4][27].setHSV(gHue, 255, 255);
    leds[5][26].setHSV(gHue, 255, 255);
    leds[5][27].setHSV(gHue, 255, 255);
    ledsR[57].setHSV(gHue, 255, 255);
    ledsR[58].setHSV(gHue, 255, 255);
    ledsR[150].setHSV(gHue, 255, 255);
    ledsR[151].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][26].setHSV(gHue, 255, 255);
    leds[0][27].setHSV(gHue, 255, 255);
    leds[0][28].setHSV(gHue, 255, 255);
    leds[1][26].setHSV(gHue, 255, 255);
    leds[1][27].setHSV(gHue, 255, 255);
    leds[1][28].setHSV(gHue, 255, 255);
    leds[2][26].setHSV(gHue, 255, 255);
    leds[2][27].setHSV(gHue, 255, 255);
    leds[2][28].setHSV(gHue, 255, 255);
    leds[3][26].setHSV(gHue, 255, 255);
    leds[3][27].setHSV(gHue, 255, 255);
    leds[3][28].setHSV(gHue, 255, 255);
    leds[4][26].setHSV(gHue, 255, 255);
    leds[4][27].setHSV(gHue, 255, 255);
    leds[4][28].setHSV(gHue, 255, 255);
    leds[5][26].setHSV(gHue, 255, 255);
    leds[5][27].setHSV(gHue, 255, 255);
    leds[5][28].setHSV(gHue, 255, 255);
    ledsR[57].setHSV(gHue, 255, 255);
    ledsR[58].setHSV(gHue, 255, 255);
    ledsR[59].setHSV(gHue, 255, 255);
    ledsR[149].setHSV(gHue, 255, 255);
    ledsR[150].setHSV(gHue, 255, 255);
    ledsR[151].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][27].setHSV(gHue, 255, 255);
    leds[0][28].setHSV(gHue, 255, 255);
    leds[1][27].setHSV(gHue, 255, 255);
    leds[1][28].setHSV(gHue, 255, 255);
    leds[2][27].setHSV(gHue, 255, 255);
    leds[2][28].setHSV(gHue, 255, 255);
    leds[3][27].setHSV(gHue, 255, 255);
    leds[3][28].setHSV(gHue, 255, 255);
    leds[4][27].setHSV(gHue, 255, 255);
    leds[4][28].setHSV(gHue, 255, 255);
    leds[5][27].setHSV(gHue, 255, 255);
    leds[5][28].setHSV(gHue, 255, 255);
    ledsR[58].setHSV(gHue, 255, 255);
    ledsR[59].setHSV(gHue, 255, 255);
    ledsR[60].setHSV(gHue, 255, 255);
    ledsR[148].setHSV(gHue, 255, 255);
    ledsR[149].setHSV(gHue, 255, 255);
    ledsR[150].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][28].setHSV(gHue, 255, 255);
    leds[0][29].setHSV(gHue, 255, 255);
    leds[1][28].setHSV(gHue, 255, 255);
    leds[1][29].setHSV(gHue, 255, 255);
    leds[2][28].setHSV(gHue, 255, 255);
    leds[2][29].setHSV(gHue, 255, 255);
    leds[3][28].setHSV(gHue, 255, 255);
    leds[3][29].setHSV(gHue, 255, 255);
    leds[4][28].setHSV(gHue, 255, 255);
    leds[4][29].setHSV(gHue, 255, 255);
    leds[5][28].setHSV(gHue, 255, 255);
    leds[5][29].setHSV(gHue, 255, 255);
    ledsR[59].setHSV(gHue, 255, 255);
    ledsR[60].setHSV(gHue, 255, 255);
    ledsR[148].setHSV(gHue, 255, 255);
    ledsR[149].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][29].setHSV(gHue, 255, 255);
    leds[0][30].setHSV(gHue, 255, 255);
    leds[1][29].setHSV(gHue, 255, 255);
    leds[1][30].setHSV(gHue, 255, 255);
    leds[2][29].setHSV(gHue, 255, 255);
    leds[2][30].setHSV(gHue, 255, 255);
    leds[3][29].setHSV(gHue, 255, 255);
    leds[3][30].setHSV(gHue, 255, 255);
    leds[4][29].setHSV(gHue, 255, 255);
    leds[4][30].setHSV(gHue, 255, 255);
    leds[5][29].setHSV(gHue, 255, 255);
    leds[5][30].setHSV(gHue, 255, 255);
    ledsR[60].setHSV(gHue, 255, 255);
    ledsR[61].setHSV(gHue, 255, 255);
    ledsR[147].setHSV(gHue, 255, 255);
    ledsR[148].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][29].setHSV(gHue, 255, 255);
    leds[0][30].setHSV(gHue, 255, 255);
    leds[0][31].setHSV(gHue, 255, 255);
    leds[1][29].setHSV(gHue, 255, 255);
    leds[1][30].setHSV(gHue, 255, 255);
    leds[1][31].setHSV(gHue, 255, 255);
    leds[2][29].setHSV(gHue, 255, 255);
    leds[2][30].setHSV(gHue, 255, 255);
    leds[2][31].setHSV(gHue, 255, 255);
    leds[3][29].setHSV(gHue, 255, 255);
    leds[3][30].setHSV(gHue, 255, 255);
    leds[3][31].setHSV(gHue, 255, 255);
    leds[4][29].setHSV(gHue, 255, 255);
    leds[4][30].setHSV(gHue, 255, 255);
    leds[4][31].setHSV(gHue, 255, 255);
    leds[5][29].setHSV(gHue, 255, 255);
    leds[5][30].setHSV(gHue, 255, 255);
    leds[5][31].setHSV(gHue, 255, 255);
    ledsR[61].setHSV(gHue, 255, 255);
    ledsR[62].setHSV(gHue, 255, 255);
    ledsR[146].setHSV(gHue, 255, 255);
    ledsR[147].setHSV(gHue, 255, 255);
    ledsR[148].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][30].setHSV(gHue, 255, 255);
    leds[0][31].setHSV(gHue, 255, 255);
    leds[1][30].setHSV(gHue, 255, 255);
    leds[1][31].setHSV(gHue, 255, 255);
    leds[2][30].setHSV(gHue, 255, 255);
    leds[2][31].setHSV(gHue, 255, 255);
    leds[3][30].setHSV(gHue, 255, 255);
    leds[3][31].setHSV(gHue, 255, 255);
    leds[4][30].setHSV(gHue, 255, 255);
    leds[4][31].setHSV(gHue, 255, 255);
    leds[5][30].setHSV(gHue, 255, 255);
    leds[5][31].setHSV(gHue, 255, 255);
    ledsR[61].setHSV(gHue, 255, 255);
    ledsR[62].setHSV(gHue, 255, 255);
    ledsR[63].setHSV(gHue, 255, 255);
    ledsR[145].setHSV(gHue, 255, 255);
    ledsR[146].setHSV(gHue, 255, 255);
    ledsR[147].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][31].setHSV(gHue, 255, 255);
    leds[0][32].setHSV(gHue, 255, 255);
    leds[1][31].setHSV(gHue, 255, 255);
    leds[1][32].setHSV(gHue, 255, 255);
    leds[2][31].setHSV(gHue, 255, 255);
    leds[2][32].setHSV(gHue, 255, 255);
    leds[3][31].setHSV(gHue, 255, 255);
    leds[3][32].setHSV(gHue, 255, 255);
    leds[4][31].setHSV(gHue, 255, 255);
    leds[4][32].setHSV(gHue, 255, 255);
    leds[5][31].setHSV(gHue, 255, 255);
    leds[5][32].setHSV(gHue, 255, 255);
    ledsR[62].setHSV(gHue, 255, 255);
    ledsR[63].setHSV(gHue, 255, 255);
    ledsR[64].setHSV(gHue, 255, 255);
    ledsR[144].setHSV(gHue, 255, 255);
    ledsR[145].setHSV(gHue, 255, 255);
    ledsR[146].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][31].setHSV(gHue, 255, 255);
    leds[0][32].setHSV(gHue, 255, 255);
    leds[0][33].setHSV(gHue, 255, 255);
    leds[1][31].setHSV(gHue, 255, 255);
    leds[1][32].setHSV(gHue, 255, 255);
    leds[1][33].setHSV(gHue, 255, 255);
    leds[2][31].setHSV(gHue, 255, 255);
    leds[2][32].setHSV(gHue, 255, 255);
    leds[2][33].setHSV(gHue, 255, 255);
    leds[3][31].setHSV(gHue, 255, 255);
    leds[3][32].setHSV(gHue, 255, 255);
    leds[3][33].setHSV(gHue, 255, 255);
    leds[4][31].setHSV(gHue, 255, 255);
    leds[4][32].setHSV(gHue, 255, 255);
    leds[4][33].setHSV(gHue, 255, 255);
    leds[5][31].setHSV(gHue, 255, 255);
    leds[5][32].setHSV(gHue, 255, 255);
    leds[5][33].setHSV(gHue, 255, 255);
    ledsR[63].setHSV(gHue, 255, 255);
    ledsR[64].setHSV(gHue, 255, 255);
    ledsR[65].setHSV(gHue, 255, 255);
    ledsR[143].setHSV(gHue, 255, 255);
    ledsR[144].setHSV(gHue, 255, 255);
    ledsR[145].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][32].setHSV(gHue, 255, 255);
    leds[0][33].setHSV(gHue, 255, 255);
    leds[1][32].setHSV(gHue, 255, 255);
    leds[1][33].setHSV(gHue, 255, 255);
    leds[2][32].setHSV(gHue, 255, 255);
    leds[2][33].setHSV(gHue, 255, 255);
    leds[3][32].setHSV(gHue, 255, 255);
    leds[3][33].setHSV(gHue, 255, 255);
    leds[4][32].setHSV(gHue, 255, 255);
    leds[4][33].setHSV(gHue, 255, 255);
    leds[5][32].setHSV(gHue, 255, 255);
    leds[5][33].setHSV(gHue, 255, 255);
    ledsR[64].setHSV(gHue, 255, 255);
    ledsR[65].setHSV(gHue, 255, 255);
    ledsR[143].setHSV(gHue, 255, 255);
    ledsR[144].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][33].setHSV(gHue, 255, 255);
    leds[0][34].setHSV(gHue, 255, 255);
    leds[1][33].setHSV(gHue, 255, 255);
    leds[1][34].setHSV(gHue, 255, 255);
    leds[2][33].setHSV(gHue, 255, 255);
    leds[2][34].setHSV(gHue, 255, 255);
    leds[3][33].setHSV(gHue, 255, 255);
    leds[3][34].setHSV(gHue, 255, 255);
    leds[4][33].setHSV(gHue, 255, 255);
    leds[4][34].setHSV(gHue, 255, 255);
    leds[5][33].setHSV(gHue, 255, 255);
    leds[5][34].setHSV(gHue, 255, 255);
    ledsR[65].setHSV(gHue, 255, 255);
    ledsR[66].setHSV(gHue, 255, 255);
    ledsR[142].setHSV(gHue, 255, 255);
    ledsR[143].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][34].setHSV(gHue, 255, 255);
    leds[0][35].setHSV(gHue, 255, 255);
    leds[1][34].setHSV(gHue, 255, 255);
    leds[1][35].setHSV(gHue, 255, 255);
    leds[2][34].setHSV(gHue, 255, 255);
    leds[2][35].setHSV(gHue, 255, 255);
    leds[3][34].setHSV(gHue, 255, 255);
    leds[3][35].setHSV(gHue, 255, 255);
    leds[4][34].setHSV(gHue, 255, 255);
    leds[4][35].setHSV(gHue, 255, 255);
    leds[5][34].setHSV(gHue, 255, 255);
    leds[5][35].setHSV(gHue, 255, 255);
    ledsR[65].setHSV(gHue, 255, 255);
    ledsR[66].setHSV(gHue, 255, 255);
    ledsR[67].setHSV(gHue, 255, 255);
    ledsR[141].setHSV(gHue, 255, 255);
    ledsR[142].setHSV(gHue, 255, 255);
    ledsR[143].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][34].setHSV(gHue, 255, 255);
    leds[0][35].setHSV(gHue, 255, 255);
    leds[0][36].setHSV(gHue, 255, 255);
    leds[0][37].setHSV(gHue, 255, 255);
    leds[0][38].setHSV(gHue, 255, 255);
    leds[0][39].setHSV(gHue, 255, 255);
    leds[0][40].setHSV(gHue, 255, 255);
    leds[1][34].setHSV(gHue, 255, 255);
    leds[1][35].setHSV(gHue, 255, 255);
    leds[1][36].setHSV(gHue, 255, 255);
    leds[1][37].setHSV(gHue, 255, 255);
    leds[1][38].setHSV(gHue, 255, 255);
    leds[1][39].setHSV(gHue, 255, 255);
    leds[1][40].setHSV(gHue, 255, 255);
    leds[2][34].setHSV(gHue, 255, 255);
    leds[2][35].setHSV(gHue, 255, 255);
    leds[2][36].setHSV(gHue, 255, 255);
    leds[2][37].setHSV(gHue, 255, 255);
    leds[2][38].setHSV(gHue, 255, 255);
    leds[2][39].setHSV(gHue, 255, 255);
    leds[2][40].setHSV(gHue, 255, 255);
    leds[3][34].setHSV(gHue, 255, 255);
    leds[3][35].setHSV(gHue, 255, 255);
    leds[3][36].setHSV(gHue, 255, 255);
    leds[3][37].setHSV(gHue, 255, 255);
    leds[3][38].setHSV(gHue, 255, 255);
    leds[3][39].setHSV(gHue, 255, 255);
    leds[3][40].setHSV(gHue, 255, 255);
    leds[4][34].setHSV(gHue, 255, 255);
    leds[4][35].setHSV(gHue, 255, 255);
    leds[4][36].setHSV(gHue, 255, 255);
    leds[4][37].setHSV(gHue, 255, 255);
    leds[4][38].setHSV(gHue, 255, 255);
    leds[4][39].setHSV(gHue, 255, 255);
    leds[4][40].setHSV(gHue, 255, 255);
    leds[5][34].setHSV(gHue, 255, 255);
    leds[5][35].setHSV(gHue, 255, 255);
    leds[5][36].setHSV(gHue, 255, 255);
    leds[5][37].setHSV(gHue, 255, 255);
    leds[5][38].setHSV(gHue, 255, 255);
    leds[5][39].setHSV(gHue, 255, 255);
    leds[5][40].setHSV(gHue, 255, 255);
    ledsR[66].setHSV(gHue, 255, 255);
    ledsR[67].setHSV(gHue, 255, 255);
    ledsR[68].setHSV(gHue, 255, 255);
    ledsR[140].setHSV(gHue, 255, 255);
    ledsR[141].setHSV(gHue, 255, 255);
    ledsR[142].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][35].setHSV(gHue, 255, 255);
    leds[0][36].setHSV(gHue, 255, 255);
    leds[0][37].setHSV(gHue, 255, 255);
    leds[0][38].setHSV(gHue, 255, 255);
    leds[0][39].setHSV(gHue, 255, 255);
    leds[0][40].setHSV(gHue, 255, 255);
    leds[1][35].setHSV(gHue, 255, 255);
    leds[1][36].setHSV(gHue, 255, 255);
    leds[1][37].setHSV(gHue, 255, 255);
    leds[1][38].setHSV(gHue, 255, 255);
    leds[1][39].setHSV(gHue, 255, 255);
    leds[1][40].setHSV(gHue, 255, 255);
    leds[2][35].setHSV(gHue, 255, 255);
    leds[2][36].setHSV(gHue, 255, 255);
    leds[2][37].setHSV(gHue, 255, 255);
    leds[2][38].setHSV(gHue, 255, 255);
    leds[2][39].setHSV(gHue, 255, 255);
    leds[2][40].setHSV(gHue, 255, 255);
    leds[3][35].setHSV(gHue, 255, 255);
    leds[3][36].setHSV(gHue, 255, 255);
    leds[3][37].setHSV(gHue, 255, 255);
    leds[3][38].setHSV(gHue, 255, 255);
    leds[3][39].setHSV(gHue, 255, 255);
    leds[3][40].setHSV(gHue, 255, 255);
    leds[4][35].setHSV(gHue, 255, 255);
    leds[4][36].setHSV(gHue, 255, 255);
    leds[4][37].setHSV(gHue, 255, 255);
    leds[4][38].setHSV(gHue, 255, 255);
    leds[4][39].setHSV(gHue, 255, 255);
    leds[4][40].setHSV(gHue, 255, 255);
    leds[5][35].setHSV(gHue, 255, 255);
    leds[5][36].setHSV(gHue, 255, 255);
    leds[5][37].setHSV(gHue, 255, 255);
    leds[5][38].setHSV(gHue, 255, 255);
    leds[5][39].setHSV(gHue, 255, 255);
    leds[5][40].setHSV(gHue, 255, 255);
    ledsR[67].setHSV(gHue, 255, 255);
    ledsR[68].setHSV(gHue, 255, 255);
    ledsR[69].setHSV(gHue, 255, 255);
    ledsR[139].setHSV(gHue, 255, 255);
    ledsR[140].setHSV(gHue, 255, 255);
    ledsR[141].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    leds[0][36].setHSV(gHue, 255, 255);
    leds[0][37].setHSV(gHue, 255, 255);
    leds[0][38].setHSV(gHue, 255, 255);
    leds[0][39].setHSV(gHue, 255, 255);
    leds[0][40].setHSV(gHue, 255, 255);
    leds[1][36].setHSV(gHue, 255, 255);
    leds[1][37].setHSV(gHue, 255, 255);
    leds[1][38].setHSV(gHue, 255, 255);
    leds[1][39].setHSV(gHue, 255, 255);
    leds[1][40].setHSV(gHue, 255, 255);
    leds[2][36].setHSV(gHue, 255, 255);
    leds[2][37].setHSV(gHue, 255, 255);
    leds[2][38].setHSV(gHue, 255, 255);
    leds[2][39].setHSV(gHue, 255, 255);
    leds[2][40].setHSV(gHue, 255, 255);
    leds[3][36].setHSV(gHue, 255, 255);
    leds[3][37].setHSV(gHue, 255, 255);
    leds[3][38].setHSV(gHue, 255, 255);
    leds[3][39].setHSV(gHue, 255, 255);
    leds[3][40].setHSV(gHue, 255, 255);
    leds[4][36].setHSV(gHue, 255, 255);
    leds[4][37].setHSV(gHue, 255, 255);
    leds[4][38].setHSV(gHue, 255, 255);
    leds[4][39].setHSV(gHue, 255, 255);
    leds[4][40].setHSV(gHue, 255, 255);
    leds[5][36].setHSV(gHue, 255, 255);
    leds[5][37].setHSV(gHue, 255, 255);
    leds[5][38].setHSV(gHue, 255, 255);
    leds[5][39].setHSV(gHue, 255, 255);
    leds[5][40].setHSV(gHue, 255, 255);
    ledsR[68].setHSV(gHue, 255, 255);
    ledsR[69].setHSV(gHue, 255, 255);
    ledsR[139].setHSV(gHue, 255, 255);
    ledsR[140].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    ledsR[69].setHSV(gHue, 255, 255);
    ledsR[70].setHSV(gHue, 255, 255);
    ledsR[71].setHSV(gHue, 255, 255);
    ledsR[72].setHSV(gHue, 255, 255);
    ledsR[73].setHSV(gHue, 255, 255);
    ledsR[74].setHSV(gHue, 255, 255);
    ledsR[75].setHSV(gHue, 255, 255);
    ledsR[76].setHSV(gHue, 255, 255);
    ledsR[77].setHSV(gHue, 255, 255);
    ledsR[78].setHSV(gHue, 255, 255);
    ledsR[79].setHSV(gHue, 255, 255);
    ledsR[80].setHSV(gHue, 255, 255);
    ledsR[81].setHSV(gHue, 255, 255);
    ledsR[82].setHSV(gHue, 255, 255);
    ledsR[83].setHSV(gHue, 255, 255);
    ledsR[84].setHSV(gHue, 255, 255);
    ledsR[85].setHSV(gHue, 255, 255);
    ledsR[86].setHSV(gHue, 255, 255);
    ledsR[87].setHSV(gHue, 255, 255);
    ledsR[88].setHSV(gHue, 255, 255);
    ledsR[89].setHSV(gHue, 255, 255);
    ledsR[90].setHSV(gHue, 255, 255);
    ledsR[91].setHSV(gHue, 255, 255);
    ledsR[92].setHSV(gHue, 255, 255);
    ledsR[93].setHSV(gHue, 255, 255);
    ledsR[94].setHSV(gHue, 255, 255);
    ledsR[95].setHSV(gHue, 255, 255);
    ledsR[96].setHSV(gHue, 255, 255);
    ledsR[97].setHSV(gHue, 255, 255);
    ledsR[98].setHSV(gHue, 255, 255);
    ledsR[99].setHSV(gHue, 255, 255);
    ledsR[100].setHSV(gHue, 255, 255);
    ledsR[101].setHSV(gHue, 255, 255);
    ledsR[102].setHSV(gHue, 255, 255);
    ledsR[103].setHSV(gHue, 255, 255);
    ledsR[104].setHSV(gHue, 255, 255);
    ledsR[105].setHSV(gHue, 255, 255);
    ledsR[106].setHSV(gHue, 255, 255);
    ledsR[107].setHSV(gHue, 255, 255);
    ledsR[108].setHSV(gHue, 255, 255);
    ledsR[109].setHSV(gHue, 255, 255);
    ledsR[110].setHSV(gHue, 255, 255);
    ledsR[111].setHSV(gHue, 255, 255);
    ledsR[112].setHSV(gHue, 255, 255);
    ledsR[113].setHSV(gHue, 255, 255);
    ledsR[114].setHSV(gHue, 255, 255);
    ledsR[115].setHSV(gHue, 255, 255);
    ledsR[116].setHSV(gHue, 255, 255);
    ledsR[117].setHSV(gHue, 255, 255);
    ledsR[118].setHSV(gHue, 255, 255);
    ledsR[119].setHSV(gHue, 255, 255);
    ledsR[120].setHSV(gHue, 255, 255);
    ledsR[121].setHSV(gHue, 255, 255);
    ledsR[122].setHSV(gHue, 255, 255);
    ledsR[123].setHSV(gHue, 255, 255);
    ledsR[124].setHSV(gHue, 255, 255);
    ledsR[125].setHSV(gHue, 255, 255);
    ledsR[126].setHSV(gHue, 255, 255);
    ledsR[127].setHSV(gHue, 255, 255);
    ledsR[128].setHSV(gHue, 255, 255);
    ledsR[129].setHSV(gHue, 255, 255);
    ledsR[130].setHSV(gHue, 255, 255);
    ledsR[131].setHSV(gHue, 255, 255);
    ledsR[132].setHSV(gHue, 255, 255);
    ledsR[133].setHSV(gHue, 255, 255);
    ledsR[134].setHSV(gHue, 255, 255);
    ledsR[135].setHSV(gHue, 255, 255);
    ledsR[136].setHSV(gHue, 255, 255);
    ledsR[137].setHSV(gHue, 255, 255);
    ledsR[138].setHSV(gHue, 255, 255);
    ledsR[139].setHSV(gHue, 255, 255);
  }
  loopF++;
  if (tmpval > loopF) {
    ledsR[70].setHSV(gHue, 255, 255);
    ledsR[71].setHSV(gHue, 255, 255);
    ledsR[72].setHSV(gHue, 255, 255);
    ledsR[73].setHSV(gHue, 255, 255);
    ledsR[74].setHSV(gHue, 255, 255);
    ledsR[75].setHSV(gHue, 255, 255);
    ledsR[76].setHSV(gHue, 255, 255);
    ledsR[77].setHSV(gHue, 255, 255);
    ledsR[78].setHSV(gHue, 255, 255);
    ledsR[79].setHSV(gHue, 255, 255);
    ledsR[80].setHSV(gHue, 255, 255);
    ledsR[81].setHSV(gHue, 255, 255);
    ledsR[82].setHSV(gHue, 255, 255);
    ledsR[83].setHSV(gHue, 255, 255);
    ledsR[84].setHSV(gHue, 255, 255);
    ledsR[85].setHSV(gHue, 255, 255);
    ledsR[86].setHSV(gHue, 255, 255);
    ledsR[87].setHSV(gHue, 255, 255);
    ledsR[88].setHSV(gHue, 255, 255);
    ledsR[89].setHSV(gHue, 255, 255);
    ledsR[90].setHSV(gHue, 255, 255);
    ledsR[91].setHSV(gHue, 255, 255);
    ledsR[92].setHSV(gHue, 255, 255);
    ledsR[93].setHSV(gHue, 255, 255);
    ledsR[94].setHSV(gHue, 255, 255);
    ledsR[95].setHSV(gHue, 255, 255);
    ledsR[96].setHSV(gHue, 255, 255);
    ledsR[97].setHSV(gHue, 255, 255);
    ledsR[98].setHSV(gHue, 255, 255);
    ledsR[99].setHSV(gHue, 255, 255);
    ledsR[100].setHSV(gHue, 255, 255);
    ledsR[101].setHSV(gHue, 255, 255);
    ledsR[102].setHSV(gHue, 255, 255);
    ledsR[103].setHSV(gHue, 255, 255);
    ledsR[104].setHSV(gHue, 255, 255);
    ledsR[105].setHSV(gHue, 255, 255);
    ledsR[106].setHSV(gHue, 255, 255);
    ledsR[107].setHSV(gHue, 255, 255);
    ledsR[108].setHSV(gHue, 255, 255);
    ledsR[109].setHSV(gHue, 255, 255);
    ledsR[110].setHSV(gHue, 255, 255);
    ledsR[111].setHSV(gHue, 255, 255);
    ledsR[112].setHSV(gHue, 255, 255);
    ledsR[113].setHSV(gHue, 255, 255);
    ledsR[114].setHSV(gHue, 255, 255);
    ledsR[115].setHSV(gHue, 255, 255);
    ledsR[116].setHSV(gHue, 255, 255);
    ledsR[117].setHSV(gHue, 255, 255);
    ledsR[118].setHSV(gHue, 255, 255);
    ledsR[119].setHSV(gHue, 255, 255);
    ledsR[120].setHSV(gHue, 255, 255);
    ledsR[121].setHSV(gHue, 255, 255);
    ledsR[122].setHSV(gHue, 255, 255);
    ledsR[123].setHSV(gHue, 255, 255);
    ledsR[124].setHSV(gHue, 255, 255);
    ledsR[125].setHSV(gHue, 255, 255);
    ledsR[126].setHSV(gHue, 255, 255);
    ledsR[127].setHSV(gHue, 255, 255);
    ledsR[128].setHSV(gHue, 255, 255);
    ledsR[129].setHSV(gHue, 255, 255);
    ledsR[130].setHSV(gHue, 255, 255);
    ledsR[131].setHSV(gHue, 255, 255);
    ledsR[132].setHSV(gHue, 255, 255);
    ledsR[133].setHSV(gHue, 255, 255);
    ledsR[134].setHSV(gHue, 255, 255);
    ledsR[135].setHSV(gHue, 255, 255);
    ledsR[136].setHSV(gHue, 255, 255);
    ledsR[137].setHSV(gHue, 255, 255);
    ledsR[138].setHSV(gHue, 255, 255);
  }
  loopF++;
  MIDInoteF[tmpnote] = 0;
}